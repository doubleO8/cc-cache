server {
    access_log /var/log/nginx/cccache-access.log combined;
    error_log  /var/log/nginx/cccache-error.log info;

    set $app_root    /opt/cc-cache;
    set $static      /opt/static;
    set $doc_root    /opt/cc-cache/doc/build/html;
    set $static_auth /etc/nginx/static_auth;

    listen      53722;

    root $static;

    charset     utf-8;
    client_max_body_size 12M;
    client_body_buffer_size 2M;

    location @application {
        include uwsgi_params;
        uwsgi_pass unix:/opt/uwsgi-sockets/cccache;
    }

    location = /auth {
        internal;
        include uwsgi_params;
        uwsgi_pass unix:/opt/uwsgi-sockets/cccache;
        uwsgi_pass_request_body off;
    }

    # serve static files
    location /static {
        alias $static;
        include snippets/enable_cors;
        access_log off;

        expires +14d;
        add_header Cache-Control public;
    }

    location = /favicon.ico {
        alias $static/favicon.ico;
        access_log off;

        expires +14d;
        add_header Cache-Control public;
    }

    location /doc {
        auth_basic "I'm sorry, Dave.";
        auth_basic_user_file $static_auth;

        include snippets/enable_cors;
        access_log off;

        alias $doc_root;

        index index.html;

        expires +14d;
        add_header Cache-Control public;
    }

    # memcached access
    location ~ /c/([a-z][a-z0-9\-\_]+)/([a-zA-Z0-9\-\_]+) {
        auth_basic "I'm sorry, Dave.";
        auth_basic_user_file $static_auth;

        set $memcached_key "ccc_$1.$2";
        memcached_pass localhost:11211;
        default_type application/json;

        include snippets/enable_cors;

        expires modified +12h;
        add_header    Cache-Control  public;
    }

    location ~ /f/([a-z][a-z0-9\-\_]+)/([a-zA-Z0-9\-\_]+) {
        auth_basic "I'm sorry, Dave.";
        auth_basic_user_file $static_auth;

        set $memcached_key "ccc_$1.$2";
        memcached_pass localhost:11211;
        default_type application/json;

        include snippets/enable_cors;
        error_page 404 = @application;  # fallback to application

        expires modified +12h;
        add_header    Cache-Control  public;
    }

    # application access
    location / {
        auth_basic "I'm sorry, Dave.";
        auth_basic_user_file $static_auth;

        include snippets/enable_cors;
        error_page 404 = @application;  # fallback to application
        error_page 405 = @application;  # PUT,DELETE are handled by application
    }

    # Enable gzip but do not remove ETag headers
    gzip on;
    gzip_vary on;
    gzip_comp_level 4;
    gzip_min_length 256;
    gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
    gzip_types application/javascript application/json text/javascript text/css text/html;
}
